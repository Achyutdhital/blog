# Generated by Django 5.1.4 on 2024-12-17 10:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='Max 60 characters', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Max 160 characters', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('canonical_url', models.URLField(blank=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta_title', models.CharField(blank=True, help_text='Max 60 characters', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Max 160 characters', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('canonical_url', models.URLField(blank=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/images/')),
                ('image_alt_text', models.CharField(blank=True, max_length=100)),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('focus_keyword', models.CharField(blank=True, help_text='Main keyword for this post', max_length=100)),
                ('structured_data', models.JSONField(blank=True, default=dict, help_text='Schema.org structured data')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title', max_length=95)),
                ('og_description', models.CharField(blank=True, help_text='Open Graph description', max_length=200)),
                ('og_image', models.ImageField(blank=True, null=True, upload_to='blog/og_images/')),
                ('twitter_card_type', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image')], default='summary_large_image', max_length=20)),
                ('reading_time', models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes')),
                ('word_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.category')),
                ('related_posts', models.ManyToManyField(blank=True, to='app.post')),
                ('tags', models.ManyToManyField(blank=True, to='app.tag')),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='PostRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='app.post')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InternalLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anchor_text', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbound_links', to='app.post')),
                ('target_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbound_links', to='app.post')),
            ],
            options={
                'unique_together': {('source_post', 'target_post')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['slug'], name='app_post_slug_404869_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['published_date'], name='app_post_publish_7078a4_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['status'], name='app_post_status_3d3324_idx'),
        ),
    ]
